import java.util.Scanner;

public class Task_1 {
	static int i,j,k,re;//i,j定义当前指针位置,	k操作符数组当前所在位置,	re返回结果值
	static char[] cs;//接收输入符
	static int[][] source= {//源数据
		{100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900},
		{100, 100, 200, 300, 300, 400, 500, 600, 700, 700, 800, 900, 1000, 1100, 1100, 1200, 1300, 1400, 1500},
		{100, 100, 100, 200, 100, 200, 300, 400, 500, 400, 500, 600, 700, 800, 700, 800, 900, 1000, 1100},
		{100, 100, 100, 100, 100, 100, 100, 200, 300, 100, 200, 300, 400, 500, 300, 400, 500, 600, 700},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 100, 200, 300},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100}
		};
	
	public static void con_1()//连续的++，此时指针指向第一个+号，这种情况下，已经判定，
	{
			//re+= 2*source[i][j];
			re+= source[i][j];
			++k;//指针忽略后续+号指向下下一个符号
			System.out.printf("+%d",source[i][j]/100);//补充输出的一个例子
			if(i== 0)//若此时数据源里的指针还在本列列首，则还需要右移
				j++;
			else i= 0;//否则只是上移至列首
	}
	
	public static void con_2()//处理单个的+号
	{
		if(k== cs.length-1)	;//re+= source[i][j];
		else if(cs[k+1]== '+')	con_1();
		//else re+= source[i][j];
	}
	
	public static int add()//比较复杂的+操作
	{
		if(k>= 2)
		{
			if(cs[k-2]== '+'&& cs[k-1]== '-')
			{
			//re+= source[i][j];	
			i= 0;//加本位，再上升至列首
			return 0;
			}
		}
		
		if(k>= 3)
		{
			if(cs[k-3]== '+'&& cs[k-2]== '-'&& cs[k-1]== '-')
			{
				if(k>= 6){
				if((cs[k-6]== '-'&& cs[k-5]== '-'&& cs[k-4]=='-')||(cs[k-6]== '+'&& cs[k-5]== '-'&& cs[k-4]=='-'))//前边是---或者+--，就按照普通操作
				{	con_2();	return 0;}	
				}
				
				if(k< cs.length-2){
					if(cs[k+1]== '-'||(cs[k+1]== '+'&& cs[k+2]== '+'))//如果后边是- 或者++ 就升至列首
					{//re+= source[i][j];
					i= 0;	return 0;}
					else	{con_1();	return 0;}//以上两大情况不符合 ，就按照普通的++处理
				}
			}
		}
		con_2();
		return 0;
	}
	
	public static int operate(String str)
	{
		cs= str.toCharArray();
		for (;k < cs.length; k++) {
			if(cs[k]== '-')	
			{	
				System.out.printf("-%d",source[i][j]/100);
				re-= source[i][j];	i++;
			}
			else if(cs[k]== '+')
			{
				System.out.printf("+%d", source[i][j]/100);
				re+= source[i][j];
				add();
			}
			else System.out.println("Exit wrong input");
		}
		
		System.out.println();
		return re;
	}
	
	public static void main(String[] args) {
		Scanner input= new Scanner(System.in);
		String str= null;
		while((str= input.next())!= null)
		{
			re= 0;	i= 0;	j= 0;	k= 0;//再次输入时，将三个参数初始化为0；
			System.out.println("= "+operate(str));
		}
	}
}